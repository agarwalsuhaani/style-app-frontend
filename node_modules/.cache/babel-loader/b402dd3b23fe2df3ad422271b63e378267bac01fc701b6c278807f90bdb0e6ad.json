{"ast":null,"code":"var _jsxFileName = \"/Users/suhaaniagarwal/Desktop/style-app/src/components/Upload.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from \"react\";\nimport { MDBBtn, MDBContainer, MDBRow, MDBCol, MDBCard, MDBCardBody, MDBCardImage } from \"mdb-react-ui-kit\";\n// Update the path as needed\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Upload() {\n  _s();\n  const [selectedFiles, setSelectedFiles] = useState([]);\n  const [uploadedImages, setUploadedImages] = useState([]);\n  const fileInputRef = useRef(null);\n  const userId = 345;\n\n  // Handle file selection\n  const handleFileChange = event => {\n    const files = Array.from(event.target.files);\n    setSelectedFiles(prevFiles => [...prevFiles, ...files]);\n  };\n  const handleSubmit = async event => {\n    event.preventDefault();\n    if (selectedFiles.length === 0) {\n      alert(\"Please select a file to upload.\");\n      return;\n    }\n    const formData = new FormData();\n    formData.append(\"user_id\", userId); // Append user_id to the form data\n\n    // Append each selected file (image_url) to the form data\n    selectedFiles.forEach(file => {\n      formData.append(\"image_url\", file); // Append the file (image URL)\n    });\n    try {\n      // POST request using the uploadFiles function from api.js\n      const response = await uploadFiles(formData); // Assuming uploadFiles sends a POST request\n      console.log(\"Upload response:\", response.data);\n      alert(\"File(s) uploaded successfully!\");\n\n      // Fetch images associated with the user after successful upload\n      fetchUploadedImages(userId);\n    } catch (error) {\n      console.error(\"Error uploading files:\", error);\n      alert(\"Failed to upload files. Please try again.\");\n    }\n  };\n\n  // Fetch images (GET request) based on user ID\n  const fetchUploadedImages = async userId => {\n    try {\n      console.log(\"Fetching images for user:\", userId);\n      const response = await getUserImages(userId); // Passing the dynamic userId\n      console.log(\"API response:\", response.data); // Check the structure of the response\n\n      // Assuming response.data.images is the array of image URLs\n      setUploadedImages(response.data.images);\n    } catch (error) {\n      console.error(\"Error fetching images:\", error);\n      alert(\"Failed to fetch images. Please try again.\");\n    }\n  };\n\n  // Usage example: assuming `userId` is dynamic\n  useEffect(() => {\n    fetchUploadedImages(userId); // Dynamic user ID is passed here\n  }, [userId]);\n\n  // Trigger the hidden file input\n  const handleButtonClick = () => {\n    fileInputRef.current.click();\n  };\n  return /*#__PURE__*/_jsxDEV(MDBContainer, {\n    fluid: true,\n    children: [/*#__PURE__*/_jsxDEV(MDBRow, {\n      className: \"d-flex justify-content-center align-items-center h-100\",\n      children: /*#__PURE__*/_jsxDEV(MDBCol, {\n        col: \"12\",\n        children: /*#__PURE__*/_jsxDEV(MDBCard, {\n          className: \"bg-dark text-white my-5 mx-auto\",\n          style: {\n            borderRadius: \"1rem\",\n            maxWidth: \"1400px\"\n          },\n          children: /*#__PURE__*/_jsxDEV(MDBCardBody, {\n            className: \"p-5 d-flex flex-column align-items-center mx-auto w-100\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-white-50 text-center w-100 mb-4\",\n              children: \"Please select files to upload.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n              onSubmit: handleSubmit,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mb-4 w-100 text-center\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"file\",\n                  ref: fileInputRef,\n                  style: {\n                    display: \"none\"\n                  },\n                  onChange: handleFileChange,\n                  multiple: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 99,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(MDBBtn, {\n                  outline: true,\n                  color: \"white\",\n                  size: \"lg\",\n                  onClick: handleButtonClick,\n                  children: \"+\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 108,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 97,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"w-100 text-center\",\n                children: /*#__PURE__*/_jsxDEV(MDBBtn, {\n                  outline: true,\n                  color: \"white\",\n                  size: \"lg\",\n                  type: \"submit\",\n                  children: \"Upload\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 119,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 118,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MDBRow, {\n      children: /*#__PURE__*/_jsxDEV(MDBCard, {\n        children: /*#__PURE__*/_jsxDEV(MDBCardBody, {\n          children: uploadedImages.length > 0 && /*#__PURE__*/_jsxDEV(MDBRow, {\n            className: \"mt-4\",\n            children: uploadedImages.map((imageUrl, index) => /*#__PURE__*/_jsxDEV(MDBCol, {\n              md: \"4\",\n              className: \"mb-4\",\n              children: /*#__PURE__*/_jsxDEV(MDBCard, {\n                children: /*#__PURE__*/_jsxDEV(MDBCardImage, {\n                  src: imageUrl // Directly use the image URL\n                  ,\n                  alt: `Uploaded by user ${userId}`,\n                  position: \"top\",\n                  style: {\n                    maxHeight: \"200px\",\n                    objectFit: \"cover\"\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 137,\n                  columnNumber: 11\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 136,\n                columnNumber: 9\n              }, this)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 7\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 3\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n}\n_s(Upload, \"mP/SlkDHxeRHo2a9xSdut9WewyM=\");\n_c = Upload;\nexport default Upload;\nvar _c;\n$RefreshReg$(_c, \"Upload\");","map":{"version":3,"names":["React","useState","useRef","useEffect","MDBBtn","MDBContainer","MDBRow","MDBCol","MDBCard","MDBCardBody","MDBCardImage","jsxDEV","_jsxDEV","Upload","_s","selectedFiles","setSelectedFiles","uploadedImages","setUploadedImages","fileInputRef","userId","handleFileChange","event","files","Array","from","target","prevFiles","handleSubmit","preventDefault","length","alert","formData","FormData","append","forEach","file","response","uploadFiles","console","log","data","fetchUploadedImages","error","getUserImages","images","handleButtonClick","current","click","fluid","children","className","col","style","borderRadius","maxWidth","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","ref","display","onChange","multiple","outline","color","size","onClick","map","imageUrl","index","md","src","alt","position","maxHeight","objectFit","_c","$RefreshReg$"],"sources":["/Users/suhaaniagarwal/Desktop/style-app/src/components/Upload.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\nimport {\n  MDBBtn,\n  MDBContainer,\n  MDBRow,\n  MDBCol,\n  MDBCard,\n  MDBCardBody,\n  MDBCardImage,\n} from \"mdb-react-ui-kit\";\n// Update the path as needed\n\nfunction Upload() {\n  const [selectedFiles, setSelectedFiles] = useState([]);\n  const [uploadedImages, setUploadedImages] = useState([]);\n  const fileInputRef = useRef(null);\n  const userId = 345; \n\n  // Handle file selection\n  const handleFileChange = (event) => {\n    const files = Array.from(event.target.files);\n    setSelectedFiles((prevFiles) => [...prevFiles, ...files]);\n  };\n\nconst handleSubmit = async (event) => {\n  event.preventDefault();\n\n  if (selectedFiles.length === 0) {\n    alert(\"Please select a file to upload.\");\n    return;\n  }\n\n  const formData = new FormData();\n  formData.append(\"user_id\", userId);  // Append user_id to the form data\n\n  // Append each selected file (image_url) to the form data\n  selectedFiles.forEach((file) => {\n    formData.append(\"image_url\", file);  // Append the file (image URL)\n  });\n\n  try {\n    // POST request using the uploadFiles function from api.js\n    const response = await uploadFiles(formData);  // Assuming uploadFiles sends a POST request\n    console.log(\"Upload response:\", response.data);\n\n    alert(\"File(s) uploaded successfully!\");\n\n    // Fetch images associated with the user after successful upload\n    fetchUploadedImages(userId);\n  } catch (error) {\n    console.error(\"Error uploading files:\", error);\n    alert(\"Failed to upload files. Please try again.\");\n  }\n};\n\n  // Fetch images (GET request) based on user ID\n  const fetchUploadedImages = async (userId) => {\n    try {\n      console.log(\"Fetching images for user:\", userId);\n      const response = await getUserImages(userId); // Passing the dynamic userId\n      console.log(\"API response:\", response.data);  // Check the structure of the response\n  \n      // Assuming response.data.images is the array of image URLs\n      setUploadedImages(response.data.images); \n    } catch (error) {\n      console.error(\"Error fetching images:\", error);\n      alert(\"Failed to fetch images. Please try again.\");\n    }\n  };\n  \n\n// Usage example: assuming `userId` is dynamic\nuseEffect(() => {\n  fetchUploadedImages(userId); // Dynamic user ID is passed here\n}, [userId]);\n\n\n  // Trigger the hidden file input\n  const handleButtonClick = () => {\n    fileInputRef.current.click();\n  };\n\n  return (\n    <MDBContainer fluid>\n      <MDBRow className=\"d-flex justify-content-center align-items-center h-100\">\n        <MDBCol col=\"12\">\n          <MDBCard\n            className=\"bg-dark text-white my-5 mx-auto\"\n            style={{ borderRadius: \"1rem\", maxWidth: \"1400px\" }}\n          >\n            <MDBCardBody className=\"p-5 d-flex flex-column align-items-center mx-auto w-100\">\n              <p className=\"text-white-50 text-center w-100 mb-4\">\n                Please select files to upload.\n              </p>\n\n              <form onSubmit={handleSubmit}>\n                <div className=\"mb-4 w-100 text-center\">\n                  {/* Hidden file input */}\n                  <input\n                    type=\"file\"\n                    ref={fileInputRef}\n                    style={{ display: \"none\" }}\n                    onChange={handleFileChange}\n                    multiple\n                  />\n\n                  {/* \"+\" Button to trigger file input */}\n                  <MDBBtn\n                    outline\n                    color=\"white\"\n                    size=\"lg\"\n                    onClick={handleButtonClick}\n                  >\n                    +\n                  </MDBBtn>\n                </div>\n\n                <div className=\"w-100 text-center\">\n                  <MDBBtn outline color=\"white\" size=\"lg\" type=\"submit\">\n                    Upload\n                  </MDBBtn>\n                </div>\n              </form>\n            </MDBCardBody>\n          </MDBCard>\n        </MDBCol>\n      </MDBRow>\n      <MDBRow>\n        <MDBCard>\n          <MDBCardBody>\n                         {/* Show uploaded images for the user */}\n                         {uploadedImages.length > 0 && (\n  <MDBRow className=\"mt-4\">\n    {uploadedImages.map((imageUrl, index) => (\n      <MDBCol key={index} md=\"4\" className=\"mb-4\">\n        <MDBCard>\n          <MDBCardImage\n            src={imageUrl} // Directly use the image URL\n            alt={`Uploaded by user ${userId}`}\n            position=\"top\"\n            style={{ maxHeight: \"200px\", objectFit: \"cover\" }}\n          />\n        </MDBCard>\n      </MDBCol>\n    ))}\n  </MDBRow>\n)}\n          </MDBCardBody>\n        </MDBCard>\n      </MDBRow>\n    </MDBContainer>\n    \n  );\n}\n\nexport default Upload;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}